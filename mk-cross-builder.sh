#!/bin/bash -e

IMAGE=zultron/mk-cross-builder
BASE_NAME=mk-cross-builder

TOPDIR="$(dirname $0)"
CONTAINER_REV=$(git rev-parse --short HEAD)

# Read config variables
. "$TOPDIR/config.sh"

template_dockerfile() {
    # Customize Dockerfile for a tag
    TAG=$1
    declare -a substitutions=()
    for KEY in $ATTRS; do
	eval VAL="\${SETTINGS_$TAG[$KEY]}"
	substitutions+=( "-e" "s,@$KEY@,$VAL," )
    done
    {
	echo "# Autogenerated from https://github.com/zultron/mk-cross-builder"
	echo "# DO NOT EDIT:  any changes will be lost"
	sed "$TOPDIR/Dockerfile" \
	    "${substitutions[@]}" \
	    -e "s/@CONTAINER_REV@/$CONTAINER_REV/"
    } > "$TOPDIR/Dockerfile.$TAG"
}

if test "$1" = "build"; then
    # Build:  If called with args `mk-cross-builder build [...]`, then
    # build the image instead of running it, and add arguments to the
    # `docker build` command
    shift
    TAG="$1"
    if test -z "$TAG"; then
	echo "Please specify tag to build" >&2
	exit 1
    fi
    shift
    cd $(dirname $0)
    template_dockerfile $TAG
    set -x
    exec docker build \
	-t ${IMAGE}:${TAG} \
	-f "${TOPDIR}/Dockerfile.${TAG}" \
	"$@" .
elif test "$1" = "update"; then
    # Update:  If called with args `mk-cross-builder update`, then
    # update `dockerfiles/Dockerfile.*` from template
    echo "Updating dockerfiles:" >&2
    for TAG in $TAGS; do
	echo "    $TAG" >&2
	template_dockerfile $TAG
    done
    exit
fi

TAG="$1"
if test -z "$TAG"; then
    echo "Please specify tag to run:  amd64, i386, armhf, raspbian" >&/dev/null
    exit 1
fi
NAME=${BASE_NAME}-${TAG}

# Check for existing containers
EXISTING="$(docker ps -aq --filter=name=${NAME})"
if test -n "${EXISTING}"; then
    # Container exists; is it running?
    RUNNING=$(docker inspect ${EXISTING} | awk '/"Running":/ { print $2 }')
    if test "${RUNNING}" = "false,"; then
	# Remove stopped container
	echo docker rm ${EXISTING}
    elif test "${RUNNING}" = "true,"; then
	# Container already running; error
	echo "Error:  container '${NAME}' already running" >&2
	exit 1
    else
	# Something went wrong
	echo "Error:  unable to determine status of " \
	    "existing container '${EXISTING}'" >&2
	exit 1
    fi
fi

set -x
docker run --rm \
    -it --privileged \
    -u `id -u`:`id -g` \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v /dev/dri:/dev/dri \
    -v $HOME:$HOME -e HOME \
    -v $PWD:$PWD \
    -w $PWD \
    -e DISPLAY \
    -h ${NAME} --name ${NAME} \
    ${IMAGE}:${TAG} "$@"
