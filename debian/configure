#!/bin/bash -e
#                                                         -*-shell-script-*-
# Placed into the public domain by John Morris, 2014
#
# Configure source package dependencies

# Distro info
#
# This should run on non-Debian distros; lsb_release is only used for
# TCL/TK version detection, which can be passed in through the '-t
# VERSION' switch
if test -x /usr/bin/lsb_release; then
    DISTRO_ID=$(lsb_release -is)  # Debian or Ubuntu
    DISTRO_RELEASE=$(lsb_release -rs)   # 8.1, 14.04, etc.
    DISTRO_CODENAME=$(lsb_release -cs) # wheezy | jessie | stretch | buster
fi

# Work out of the debian/ directory
cd "$(dirname $0)"

# Put command into a file so that later automatic invocations can
# re-run
echo $0 $* > configure.cmdline

## Set version for packages by altering changelog Write new version
## info then prepend existing one, for use in changes file Allows
## command line builds and builds outside of Travis environment to set
## meaningful version numbers

do_changelog() {
    DISTRO_UC="$(echo $DISTRO_CODENAME | sed 's/^[[:space:]]*//g' |
        sed -e 's/\b\(.\)/\u\1/g')"
    DISTRO_LC="$(echo $DISTRO_CODENAME | sed 's/^[[:space:]]*//g')"
    MKVERSION="$(git show HEAD:VERSION | cut -d ' ' -f 1).$(
        git rev-list --count HEAD)-1.git$(
        git rev-parse --short HEAD)~${DISTRO_LC}"
    COMMITTER="$(git show -s --pretty=%an $(git rev-parse --short HEAD))"
    EMAIL="$(git show -s --format='%ae' $(git rev-parse --short HEAD))"

    rm -f changelog
    cat > changelog <<EOF
machinekit (${MKVERSION}) ${DISTRO_UC}; urgency=low

  * Cross-Builder rebuild for Debian ${DISTRO_UC}, commit $(git rev-parse --short HEAD)

 -- ${COMMITTER} <${EMAIL}>  $(date -R)

EOF

    cat changelog # debug output
    cat changelog.in >> changelog
    echo "New package version number added to changelog"
}

## Create source orig tarball in format required for creation of
## debian tarball and .dsc file Allows non binary package builds from
## command line or outside Travis environment

do_source_tarball() {
    #version based on major version plus commit number only, without
    #suffixed -1 or commit hash
    MK_VERSION="$(git show HEAD:VERSION | cut -d ' ' -f 1).$(
                      git rev-list --count HEAD)"
    OWD=$PWD
    cd ../
    git archive HEAD | bzip2 -z > ../machinekit_${MK_VERSION}.orig.tar.bz2
    echo "Source tarball created"
    cd $OWD
}

usage() {
    {
    test -z "$1" || echo "$1"
    echo "Usage:  $0 [ arg ... ]"
    echo "   arg:    function:"
    echo "   -c      rewrite changelog to set package version from git commit"
    echo "   -s      create source tarball for non binary package builds"
    } >&2
    exit 1
}
test "$1" != --help || usage

#############################################
# Main program
#
# These need to be in a certain order:
# - Base template copy first
# - do_<flavor> functions next
# - replace BUILD_DEPS last
#   (when lists are fully populated)

# set defaults
BUILD_DEPS=  # List of Build-Depends
DEPS=        # List of Depends
HAVE_FLAVOR=false

## copy base templates into place

## situation at 20092018
## python-gst1.0 backported to Jessie + Stretch
## python-gtksourceview2 not available for Buster but is for Sid, meaning gladevcp widgets keep working.
## python-pil and python-pil.imagegtk active for Sid replacing python-imaging and python-imaging-tk
## however selecting python-imaging and python-imaging-tk in Stretch actually
## results in python-pil and python-pil.imagegtk being installed, so will probably completely backport soon.

case "$DISTRO_CODENAME" in
    buster)
        : # Nothing
        ;;
    stretch|jessie|sid)
        DEPS+=", python-gtksourceview2"
        ;;
    *)
        DEPS+=", python-gtksourceview2"
        ;;
esac

# Configure Xenomai threads
configure_xenomai() {
    if ! dpkg-query -W | grep -q libxenomai-dev; then
        echo "Not configuring build for Xenomai (no libxenomai-dev package)" >&2
        return
    fi

    echo "debian/control:  Adding xenomai threads configuration" >&2
    BUILD_DEPS+=", libxenomai-dev"
    DEPS+=", xenomai-runtime"
}

# read command line options
while getopts csh ARG; do
    case $ARG in
    c) do_changelog ;;  # set new changelog with package versions from git
    s) do_source_tarball ;; # create tarball for non binary builds
    h) usage ;;
    *) usage "Unknown arg: '-$ARG'" ;;
    esac
done

# Set control Build-Depends:
configure_xenomai
cp control.in control
sed >control <control.in \
    -e "s/@BUILD_DEPS@/${BUILD_DEPS}/" \
    -e "s/@DEPS@/${DEPS}/"
echo "debian/control:  add final Build-Depends: list" >&2
